#include <TinyGPS++.h>
#include <HardwareSerial.h>
#include <SPI.h>
#include <MFRC522.h>

// GPS Setup
TinyGPSPlus gps;
HardwareSerial gpsSerial(1);  // UART1 for GPS

// RFID Setup
#define SS_PIN  5   // SDA for RC522
#define RST_PIN 22  // RST for RC522
MFRC522 mfrc522(SS_PIN, RST_PIN);  // RFID reader instance

void setup() {
  Serial.begin(115200);         
  gpsSerial.begin(9600, SERIAL_8N1, 16, 17); // GPS on D16 (RX), D17 (TX)

  // RFID Initialization
  SPI.begin();                 
  mfrc522.PCD_Init();          
  Serial.println("GPS + RFID Module Starting...");
}

void loop() {
  // ----------- GPS Processing -----------
  while (gpsSerial.available()) {
    char c = gpsSerial.read();
    gps.encode(c);
  }

  if (gps.location.isUpdated()) {
    Serial.println("\n[GPS Update]");
    Serial.print("Latitude: "); Serial.println(gps.location.lat(), 6);
    Serial.print("Longitude: "); Serial.println(gps.location.lng(), 6);
    Serial.print("Satellites: "); Serial.println(gps.satellites.value());
    Serial.print("Speed (km/h): "); Serial.println(gps.speed.kmph());

    // UTC Time
    Serial.print("Time (UTC): ");
    Serial.print(gps.time.hour()); Serial.print(":");
    Serial.print(gps.time.minute()); Serial.print(":");
    Serial.println(gps.time.second());

    // IST Conversion
    int hour = gps.time.hour();
    int minute = gps.time.minute();
    int second = gps.time.second();
    minute += 30;
    hour += 5 + (minute / 60);
    minute %= 60;
    hour %= 24;

    Serial.print("Time (IST): ");
    Serial.print(hour); Serial.print(":");
    Serial.print(minute); Serial.print(":");
    Serial.println(second);
  }

  // ----------- RFID Processing -----------
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    Serial.println("\n[RFID Tag Detected]");
    Serial.print("UID: ");
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      Serial.print(mfrc522.uid.uidByte[i], HEX);
      Serial.print(" ");
    }
    Serial.println();
    mfrc522.PICC_HaltA();  // Halt the card
  }

  delay(1000);  // Delay to avoid spam
}

