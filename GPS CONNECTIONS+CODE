GPS WORKINGS 
PIN CONNECTIONS
ESP32          GPS
3V3            VCC(3 Volt)
GND            GND
D16            TX
D17            RX

REMEMBER TO KEEP BAUD RATE AS 115200
BEND PINS / SOLDER THEM TO GET ANSWERS

CODE 
#include <TinyGPS++.h>
#include <HardwareSerial.h>

TinyGPSPlus gps;
HardwareSerial gpsSerial(1);  // Use UART1

void setup() {
  Serial.begin(115200);         
  gpsSerial.begin(9600, SERIAL_8N1, 16, 17); 
  Serial.println("GPS Module is starting...");
}

void loop() {
  while (true) {
    // Check if user typed something
    if (Serial.available()) {
      char input = Serial.read();
      if (input == 'p') {
        Serial.println("Program stopped by user.");
        break;  // Exit the infinite loop
      }
    }

    // Process GPS data
    while (gpsSerial.available()) {
      char c = gpsSerial.read();
      gps.encode(c);
    //  Serial.write(c);  // Print raw GPS output
    }

    if (gps.location.isUpdated()) {
      Serial.println("\n---------------");
      Serial.print("Latitude: ");
      Serial.println(gps.location.lat(), 6);
      Serial.print("Longitude: ");
      Serial.println(gps.location.lng(), 6);
      Serial.print("Satellites: ");
      Serial.println(gps.satellites.value());
      Serial.print("Speed (km/h): ");
      Serial.println(gps.speed.kmph());

      // UTC Date and Time from GPS
      Serial.print("Date (UTC): ");
      Serial.print(gps.date.day());
      Serial.print("/");
      Serial.print(gps.date.month());
      Serial.print("/");
      Serial.println(gps.date.year());

      Serial.print("Time (UTC): ");
      Serial.print(gps.time.hour());
      Serial.print(":");
      Serial.print(gps.time.minute());
      Serial.print(":");
      Serial.println(gps.time.second());

      // Convert to IST (UTC + 5:30)
      int hour = gps.time.hour();
      int minute = gps.time.minute();
      int second = gps.time.second();

      minute += 30;
      hour += 5 + (minute / 60);
      minute = minute % 60;
      hour = hour % 24;

      Serial.print("Time (IST): ");
      Serial.print(hour);
      Serial.print(":");
      Serial.print(minute);
      Serial.print(":");
      Serial.println(second);

      Serial.println("---------------");
    } else {
      Serial.println("Waiting for GPS signal...");
    }

    delay(1000);  // Avoid spamming
  }

  // Once 'p' is received, you can either:
  // 1. Stop completely, or
  // 2. Restart loop() (remove the break and use return)
  // Here it's stopped permanently
  while (true);  // Stay here doing nothing
}
